@*{
    ViewData["Title"] = "Home Page";
}*@

@{
    var userEmail = Context.Session.GetString("UserEmail");
    var userFullName = Context.Session.GetString("UserFullName");
}

@if (userEmail != null)
{
    <p>Your session is active.</p>
    <p>You are logged in as <strong>@userFullName</strong> (<strong>@userEmail</strong>)</p>
}
else
{
    <p>You are not logged in.</p>
}

<div class="text-center">
    <h1 class="display-4">Welcome to Cyber Shopper!</h1>
    <h4>Our most popular products</h4>
</div>

@{
    var popular = ViewBag.PopularProducts as IEnumerable<Ecommerce.Models.Product>;
}

@if (popular != null && popular.Any())
{
    var imageUrl = $"/images/Image.jpg";
    <div class="row pb-3">
        @foreach (var item in popular)
        {
            <div class="col-lg-3 col-sm-6">
                <div class="row p-2">
                    <div class="col-12 p-1">
                        <div class="card border-0 p-3 shadow border-top border-5 rounded">
                            <img src="@imageUrl" class="card-img-top rounded" />
                            <div class="card-body d-flex flex-column justify-content-between pb-0">
                                <div class="pl-1">
                                    <p class="card-title h5 text-dark opacity-75 text-uppercase text-center">
                                        @item.ModelName
                                    </p>
                                </div>
                                <div class="pl-1">
                                    <p class="text-dark text-opacity-75 text-center">
                                        <span>@item.UnitCost.ToString("c")</span>
                                    </p>
                                </div>
                            </div>
                            <div class="mt-3">
                                <a asp-controller="ShoppingCart" asp-action="AddToCart" method="post" class="btn btn-primary bg-gradient border-0 form-control" data-product-id="@item.ProductId" data-product-name="@item.ModelName">Add to Cart</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No popular products found.</p>
}

<style>
    .btn:focus, .btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
  box-shadow: 0 0 0 0.1rem white, 0 0 0 0.25rem #258cfb;
}
 
.card {
    display: flex;
    flex-direction: column;
    height: 100%; /* Ensure cards take up the full height of the column */
    border-radius: .25rem;
    overflow: hidden; /* Hide overflowed content to maintain card size */
}
 
.card-img-top {
    max-height: 200px; /* Adjust the height as needed */
    object-fit: cover; /* Ensure the image fits within the set height */
}
 
.card-body {
    flex: 1;
    display: flex;
    flex-direction: column;
}
 
.card-title {
    font-size: 1.25rem; /* Base font size */
    line-height: 1.2; /* Adjust line height for better readability */
    margin-bottom: 0.5rem; /* Space below the title */
    white-space: normal; /* Allow text to wrap */
    overflow: hidden;
}
 
.card-body p {
    margin-bottom: 0; /* Remove bottom margin for better spacing */
}
 
.card-body .text {
    font-size: 1rem; /* Base font size */
    line-height: 1.4; /* Adjust line height for better readability */
    flex-grow: 1; /* Allow the description to take up available space */
    overflow: hidden; /* Hide overflowed content */
    text-overflow: clip; /* Ensure text does not overflow with ellipses */
    display: flex;
    align-items: center
}
 
.card-footer {
    margin-top: auto; /* Push the footer to the bottom of the card */
}
</style>